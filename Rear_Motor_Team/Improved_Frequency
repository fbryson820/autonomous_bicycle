#define in_pin 11 //hall sensor pulse 
#define pwm_rear 8 //rear motor PWM pin
#define v_pin 63 //voltage reading
float pwm = 69; //starting pwm
float tOld = 0; //first time reading
float tNew = 0; //second time reading
double T = 0;
double w = 0;
int sampleLength = 1;
int count = 0;
int x = 30; //ramp up starting pwm
int tc = 0; //Counts number of data points collected on this PWM
int ds = 10; //Number of data points to collect for each PWM

boolean isInterrupt = false;


int i = 0;
float avgsum = 0;
int avg = 0;

void setup() {

  Serial.begin(9600);
  pinMode(in_pin, INPUT);
  pinMode(pwm_rear, OUTPUT);

  while (x < pwm) { //Ramps up speed- Workaround for rear motor safety features
    analogWrite(pwm_rear, x);
    delay(100);
    x = x + 10;
  }
  float voltage = analogRead(63) / 14.2 * pwm / 180;
  analogWrite(pwm_rear, pwm);
  attachInterrupt(digitalPinToInterrupt(in_pin), getT, RISING); //Interrupt
}

void loop() {
  if (tc >= ds && pwm < 180) {
    tc = 0;
    float voltage = analogRead(63) / 14.2 * pwm / 180;
    pwm += 1;
    // delay(100);
    Serial.println("Increasing pwm!");
    Serial.println(pwm);
    analogWrite(pwm_rear, pwm);
  }
}


void getT() {
    tc++;
    tOld = tNew;
    tNew = micros();
    T = (tNew - tOld);
    w = (1E6) / (28 * T) ;
    if (w < 100) {
      Serial.println(w, 3);
  }
}
